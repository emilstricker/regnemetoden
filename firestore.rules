rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Match user documents
    match /users/{userId} {
      // Allow read/write if request is from the owner
      allow read: if isUser(userId);
      
      // Allow create with proper structure
      allow create: if isUser(userId)
        && request.resource.data.uid == userId
        && request.resource.data.createdAt is timestamp;
      
      // Allow updates except for uid and createdAt
      allow update: if isUser(userId)
        && !request.resource.data.diff(resource.data).affectedKeys().hasAny(['uid', 'createdAt']);

      // Match day entries subcollection
      match /dayEntries/{date} {
        allow read, write: if isUser(userId);
      }
    }

    // Deny access to all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
